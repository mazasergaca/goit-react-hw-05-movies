{"version":3,"file":"static/js/798.fccdc94b.chunk.js","mappings":"0OAMMA,EAAkBC,EAAAA,GAAAA,IAAH,0DAKfC,EAAeD,EAAAA,GAAAA,IAAH,+EAMZE,EAAaF,EAAAA,GAAAA,GAAH,+EAMVG,EAAgBH,EAAAA,GAAAA,GAAH,uKASbI,EAAkBJ,EAAAA,GAAAA,EAAH,yIAQN,SAASK,EAAT,GAAiC,IAAXC,EAAU,EAAVA,OAC7BC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACN,EAAD,UACGI,EAAOG,KAAI,SAAAC,GAAK,OACf,SAACP,EAAD,WACE,UAAC,KAAD,CACEQ,GAAI,CACFC,SAAS,WAAD,OAAaF,EAAMG,KAE7BC,MAAO,CAAEC,KAAM,CAAER,SAAAA,IACjBS,MAAO,CAAEC,QAAS,OAAQC,cAAe,UAL3C,WAOE,SAACnB,EAAD,WACE,SAACE,EAAD,CACEkB,IAAG,6CAAwCT,EAAMU,kBAIrD,SAAChB,EAAD,UACGM,EAAMW,MAAQX,EAAMW,MAAQX,EAAMY,WAfrBZ,EAAMG,W,8FCzC5BU,EAAgBvB,EAAAA,GAAAA,QAAH,sCAGJ,SAASwB,EAAT,GAAgC,IAAbC,EAAY,EAAZA,SAChC,OAAO,SAACF,EAAD,UAAgBE,M,uGCJnBC,EAAyB1B,EAAAA,GAAAA,IAAH,sEAKb,SAAS2B,IACtB,OACE,SAACD,EAAD,WACE,SAAC,KAAD,CACEE,UAAU,oBACVC,OAAQ,IACRC,MAAO,IACPC,YAAa,EACbC,MAAM,mBACNC,eAAe,a,oLClBjBC,EAAW,+BACXC,EAAU,mCAAhB,SAEeC,EAAc,GAAdA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA6BC,GAA7B,uFACyBC,MAAMD,GAD/B,YACQE,EADR,QAGkBC,GAHlB,gCAIYD,EAASE,OAJrB,+CAKMC,QAAQC,OAAO,IAAIC,MAAM,cAL/B,0GAQO,SAASC,IACd,OAAOT,EAAc,GAAD,OAAIF,EAAJ,qCAAyCC,IAGxD,SAASW,EAAgBjC,GAC9B,OAAOuB,EAAc,GAAD,OAAIF,EAAJ,kBAAsBrB,EAAtB,oBAAoCsB,IAGnD,SAASY,EAAkBzB,GAChC,OAAOc,EAAc,GAAD,OACfF,EADe,iCACkBC,EADlB,4DAC6Eb,IAI5F,SAAS0B,EAAkBnC,GAChC,OAAOuB,EAAc,GAAD,OAAIF,EAAJ,kBAAsBrB,EAAtB,4BAA4CsB,IAG3D,SAASc,EAAkBpC,GAChC,OAAOuB,EAAc,GAAD,OACfF,EADe,kBACGrB,EADH,4BACyBsB,EADzB,6B,sIC3BhBe,EAAclD,EAAAA,GAAAA,GAAH,wLASF,SAASmD,IACtB,OAAO,SAACD,EAAD,6B,+BCLM,SAASE,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAO/C,EAAP,KAAegD,EAAf,KACA,GAA4BD,EAAAA,EAAAA,UAAS,QAArC,eAAOE,EAAP,KAAeC,EAAf,KASA,OAPAC,EAAAA,EAAAA,YAAU,WACRD,EAAU,YACVX,EAAAA,EAAAA,MAAsBa,MAAK,SAAAC,GACzBH,EAAU,YACVF,EAAUK,EAAIC,cAEf,KAED,SAACpC,EAAA,EAAD,WACE,UAACqC,EAAA,EAAD,YACE,SAACV,EAAD,IACY,YAAXI,IAAwB,SAAC5B,EAAA,EAAD,IACxBrB,GAAqB,aAAXiD,IAAyB,SAAClD,EAAA,EAAD,CAAYC,OAAQA","sources":["components/MoviesList/MoviesList.js","components/Section/Section.js","components/Spinner/Spinner.js","services/movie-api.js","components/Title/Title.js","views/HomePage/HomePage.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { shape } from 'prop-types';\n\nconst StyledContainer = styled.div`\n  width: 100%;\n  height: 400px;\n`;\n\nconst StyledPoster = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nconst StyledList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  margin: -5px;\n`;\n\nconst StyledArticle = styled.li`\n  border: 1px solid #fff;\n  margin: 5px;\n  list-style: none;\n  width: calc((100% - 40px) / 4);\n  border-radius: 6px;\n  overflow: hidden;\n`;\n\nconst StyledNameMovie = styled.p`\n  padding: 10px;\n  font-size: 28px;\n  font-family: 'Jura', sans-serif;\n  color: #fff;\n  text-align: center;\n`;\n\nexport default function MoviesList({ movies }) {\n  const location = useLocation();\n  return (\n    <StyledList>\n      {movies.map(movie => (\n        <StyledArticle key={movie.id}>\n          <Link\n            to={{\n              pathname: `/movies/${movie.id}`,\n            }}\n            state={{ from: { location } }}\n            style={{ display: 'flex', flexDirection: 'column' }}\n          >\n            <StyledContainer>\n              <StyledPoster\n                src={`https://image.tmdb.org/t/p/original${movie.poster_path}`}\n              />\n            </StyledContainer>\n\n            <StyledNameMovie>\n              {movie.title ? movie.title : movie.name}\n            </StyledNameMovie>\n          </Link>\n        </StyledArticle>\n      ))}\n    </StyledList>\n  );\n}\n\nMoviesList.propTypes = {\n  movie: PropTypes.arrayOf(shape),\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst StyledSection = styled.section`\npadding 25px 0`;\n\nexport default function Section({ children }) {\n  return <StyledSection>{children}</StyledSection>;\n}\n\nSection.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import { Oval } from 'react-loader-spinner';\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst StyledContainerSpinner = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport default function Spinner() {\n  return (\n    <StyledContainerSpinner>\n      <Oval\n        ariaLabel=\"loading-indicator\"\n        height={100}\n        width={100}\n        strokeWidth={5}\n        color=\"rgb(255, 65, 65)\"\n        secondaryColor=\"#fff\"\n      />\n    </StyledContainerSpinner>\n  );\n}\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'af82d7be8f57d00f4e04fac446f5a0d5';\n\nasync function fetchHandling(url) {\n  const response = await fetch(url);\n\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not Found'));\n}\n\nexport function fetchTrendingMovies() {\n  return fetchHandling(`${BASE_URL}/trending/all/day?api_key=${API_KEY}`);\n}\n\nexport function fetchMoviesById(id) {\n  return fetchHandling(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`);\n}\n\nexport function fetchSearchMovies(name) {\n  return fetchHandling(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${name}`\n  );\n}\n\nexport function fetchMovieCredits(id) {\n  return fetchHandling(`${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`);\n}\n\nexport function fetchMovieReviews(id) {\n  return fetchHandling(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledTitle = styled.h1`\n  font-size: 50px;\n  color: rgb(255, 255, 255);\n  font-family: 'Jura', sans-serif;\n  letter-spacing: 0.06em;\n  text-align: center;\n  margin-bottom: 20px;\n`;\n\nexport default function Title() {\n  return <StyledTitle>Trending today</StyledTitle>;\n}\n","import { useState, useEffect } from 'react';\nimport { fetchTrendingMovies } from 'services/movie-api';\nimport MoviesList from 'components/MoviesList';\nimport Title from 'components/Title';\nimport Container from 'components/Container';\nimport Section from 'components/Section';\nimport Spinner from 'components/Spinner';\n\nexport default function HomePage() {\n  const [movies, setMovies] = useState([]);\n  const [status, setStatus] = useState('idle');\n\n  useEffect(() => {\n    setStatus('pending');\n    fetchTrendingMovies().then(res => {\n      setStatus('resolved');\n      setMovies(res.results);\n    });\n  }, []);\n  return (\n    <Section>\n      <Container>\n        <Title />\n        {status === 'pending' && <Spinner />}\n        {movies && status === 'resolved' && <MoviesList movies={movies} />}\n      </Container>\n    </Section>\n  );\n}\n"],"names":["StyledContainer","styled","StyledPoster","StyledList","StyledArticle","StyledNameMovie","MoviesList","movies","location","useLocation","map","movie","to","pathname","id","state","from","style","display","flexDirection","src","poster_path","title","name","StyledSection","Section","children","StyledContainerSpinner","Spinner","ariaLabel","height","width","strokeWidth","color","secondaryColor","BASE_URL","API_KEY","fetchHandling","url","fetch","response","ok","json","Promise","reject","Error","fetchTrendingMovies","fetchMoviesById","fetchSearchMovies","fetchMovieCredits","fetchMovieReviews","StyledTitle","Title","HomePage","useState","setMovies","status","setStatus","useEffect","then","res","results","Container"],"sourceRoot":""}