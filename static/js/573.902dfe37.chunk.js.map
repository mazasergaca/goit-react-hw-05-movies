{"version":3,"file":"static/js/573.902dfe37.chunk.js","mappings":"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","sources":["components/NotFoundMovies/NotFoundMovies.js","components/Section/Section.js","components/Spinner/Spinner.js","services/movie-api.js","services/slugs.js","views/MovieDetailsPage/MovieDetailsPage.js"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport cryFaceImage from '../../images/not-found-movie.png';\n\nconst StyledContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst StyledTitle = styled.h2`\n  margin-bottom: 15px;\n  font-size: 32px;\n  color: #ffffff;\n`;\n\nexport default function NotFoundMovies() {\n  return (\n    <StyledContainer>\n      <StyledTitle>Not found movie</StyledTitle>\n      <img src={cryFaceImage} alt=\"crying face\" width=\"200\" />\n    </StyledContainer>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst StyledSection = styled.section`\npadding 25px 0`;\n\nexport default function Section({ children }) {\n  return <StyledSection>{children}</StyledSection>;\n}\n\nSection.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import { Oval } from 'react-loader-spinner';\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst StyledContainerSpinner = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport default function Spinner() {\n  return (\n    <StyledContainerSpinner>\n      <Oval\n        ariaLabel=\"loading-indicator\"\n        height={100}\n        width={100}\n        strokeWidth={5}\n        color=\"rgb(255, 65, 65)\"\n        secondaryColor=\"#fff\"\n      />\n    </StyledContainerSpinner>\n  );\n}\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'af82d7be8f57d00f4e04fac446f5a0d5';\n\nasync function fetchHandling(url) {\n  const response = await fetch(url);\n\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not Found'));\n}\n\nexport function fetchTrendingMovies() {\n  return fetchHandling(`${BASE_URL}/trending/all/day?api_key=${API_KEY}`);\n}\n\nexport function fetchMoviesById(id) {\n  return fetchHandling(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`);\n}\n\nexport function fetchSearchMovies(name) {\n  return fetchHandling(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${name}`\n  );\n}\n\nexport function fetchMovieCredits(id) {\n  return fetchHandling(`${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`);\n}\n\nexport function fetchMovieReviews(id) {\n  return fetchHandling(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n}\n","export default function makeIdFromSlug(slug) {\n  return slug.match(/[a-z0-9]+$/)[0];\n}\n","import { useState, useEffect, lazy, Suspense } from 'react';\nimport {\n  useParams,\n  NavLink,\n  useLocation,\n  useNavigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport { fetchMoviesById } from 'services/movie-api';\nimport { RotatingLines } from 'react-loader-spinner';\nimport makeIdFromSlug from 'services/slugs';\nimport defaultPoster from '../../images/not-found-poster.png';\nimport styled from 'styled-components';\nimport Spinner from 'components/Spinner';\nimport Container from 'components/Container';\nimport Section from 'components/Section';\nimport NotFoundMovies from 'components/NotFoundMovies';\n\nconst Cast = lazy(() => import('views/Cast'));\nconst Reviews = lazy(() => import('views/Reviews'));\n\nconst StyledButton = styled.button`\n  display: inline-block;\n  padding: 5px 15px;\n  margin-bottom: 10px;\n  cursor: pointer;\n  font-family: 'Paytone One', sans-serif;\n  font-size: 18px;\n  border-radius: 4px;\n  border: none;\n  color: #fff;\n  background-color: transparent;\n  transition: color 250ms linear, background-color 250ms linear;\n\n  &:hover {\n    color: rgb(255, 65, 65);\n    background-color: rgb(48, 48, 48);\n  }\n`;\n\nconst StyledArticle = styled.div`\n  display: flex;\n  margin-bottom: 15px;\n  border: 1px solid #fff;\n  border-radius: 6px;\n  overflow: hidden;\n`;\n\nconst StyledTitle = styled.h2`\n  margin-bottom: 25px;\n  font-family: 'Jura', sans-serif;\n  font-size: 34px;\n  color: #fff;\n  text-align: center;\n`;\n\nconst StyledInfoContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n`;\n\nconst StyledInfo = styled.span`\n  margin-bottom: 10px;\n  font-size: 20px;\n  color: #fff;\n`;\n\nconst StyledInfoName = styled.span`\n  margin-bottom: 5px;\n  font-size: 24px;\n  color: #fff;\n`;\n\nconst StyledAdditionalInfo = styled.h2`\n  font-size: 34px;\n  font-family: 'Jura', sans-serif;\n  color: #fff;\n  text-align: center;\n`;\n\nconst StyledContainerLinks = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 15px;\n`;\n\nconst StyledContainerSpinner = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 50px;\n`;\n\nconst LinkStyled = ({ isActive }) => ({\n  color: isActive ? 'rgb(255, 65, 65)' : 'rgb(250, 250, 250)',\n});\n\nexport default function MovieDetailsPage() {\n  const [movie, setMovie] = useState([]);\n  const [status, setStatus] = useState('idle');\n  const [location, setLocation] = useState(null);\n\n  const { slug } = useParams();\n  const movieId = makeIdFromSlug(slug);\n  const currentLocation = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => setLocation(currentLocation), []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    setStatus('pending');\n    fetchMoviesById(movieId)\n      .then(res => {\n        setMovie(res);\n        setStatus('resolved');\n      })\n      .catch(error => {\n        setStatus('rejected');\n      });\n  }, [movieId]);\n\n  const onClickBack = () => {\n    navigate(location?.state?.from?.location ?? '/movies');\n  };\n\n  return (\n    <Section>\n      <Container>\n        <StyledButton type=\"button\" onClick={onClickBack}>\n          Go Back\n        </StyledButton>\n        {status === 'pending' && <Spinner />}\n        {status === 'rejected' && <NotFoundMovies />}\n        {movie && status === 'resolved' && (\n          <>\n            <StyledArticle>\n              <div>\n                <img\n                  src={\n                    movie.poster_path\n                      ? `https://image.tmdb.org/t/p/original${movie.poster_path}`\n                      : defaultPoster\n                  }\n                  width=\"400px\"\n                  alt={movie.title}\n                />\n              </div>\n              <StyledInfoContainer>\n                <StyledTitle>{movie.title}</StyledTitle>\n\n                <StyledInfoName>Genres:</StyledInfoName>\n                <StyledInfo>\n                  {movie.genres.map(genres => genres.name).join(', ')}\n                </StyledInfo>\n\n                <StyledInfoName>Release date:</StyledInfoName>\n                <StyledInfo>{movie.release_date}</StyledInfo>\n\n                <StyledInfoName>User score:</StyledInfoName>\n                <StyledInfo>{movie.vote_average}</StyledInfo>\n\n                <StyledInfoName>Overview:</StyledInfoName>\n                <StyledInfo> {movie.overview}</StyledInfo>\n              </StyledInfoContainer>\n            </StyledArticle>\n            <StyledAdditionalInfo>Additional information</StyledAdditionalInfo>\n            <StyledContainerLinks>\n              <NavLink to=\"cast\" style={LinkStyled} className=\"nav-link\">\n                Cast\n              </NavLink>\n              <NavLink to=\"reviews\" style={LinkStyled} className=\"nav-link\">\n                Reviews\n              </NavLink>\n            </StyledContainerLinks>\n\n            <Suspense\n              fallback={\n                <StyledContainerSpinner>\n                  <RotatingLines\n                    width=\"100\"\n                    strokeColor=\"#fff\"\n                    strokeWidth=\"1\"\n                  />\n                </StyledContainerSpinner>\n              }\n            >\n              <Routes>\n                <Route path=\"cast\" element={<Cast />} />\n                <Route path=\"reviews\" element={<Reviews />} />\n              </Routes>\n            </Suspense>\n          </>\n        )}\n      </Container>\n    </Section>\n  );\n}\n"],"names":["StyledContainer","styled","StyledTitle","NotFoundMovies","src","cryFaceImage","alt","width","StyledSection","Section","children","StyledContainerSpinner","Spinner","ariaLabel","height","strokeWidth","color","secondaryColor","BASE_URL","API_KEY","fetchHandling","url","fetch","response","ok","json","Promise","reject","Error","fetchTrendingMovies","fetchMoviesById","id","fetchSearchMovies","name","fetchMovieCredits","fetchMovieReviews","makeIdFromSlug","slug","match","Cast","lazy","Reviews","StyledButton","StyledArticle","StyledInfoContainer","StyledInfo","StyledInfoName","StyledAdditionalInfo","StyledContainerLinks","LinkStyled","isActive","MovieDetailsPage","useState","movie","setMovie","status","setStatus","location","setLocation","useParams","movieId","currentLocation","useLocation","navigate","useNavigate","useEffect","then","res","catch","error","Container","type","onClick","state","from","poster_path","defaultPoster","title","genres","map","join","release_date","vote_average","overview","to","style","className","Suspense","fallback","strokeColor","path","element"],"sourceRoot":""}