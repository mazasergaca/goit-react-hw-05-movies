{"version":3,"file":"static/js/849.24d46d0f.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.js","components/NotFoundMovies/NotFoundMovies.js","components/Section/Section.js","components/Spinner/Spinner.js","services/movie-api.js","components/InputMovies/InputMovies.js","views/MoviesPage/MoviesPage.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport slugify from 'slugify';\nimport styled from 'styled-components';\nimport { shape } from 'prop-types';\nimport defaultPoster from '../../images/not-found-poster.png';\n\nconst StyledContainer = styled.div`\n  width: 100%;\n  height: 400px;\n`;\n\nconst StyledPoster = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nconst StyledList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  margin: -5px;\n`;\n\nconst StyledArticle = styled.li`\n  border: 1px solid #fff;\n  margin: 5px;\n  list-style: none;\n  width: calc((100% - 40px) / 4);\n  border-radius: 6px;\n  overflow: hidden;\n`;\n\nconst StyledNameMovie = styled.p`\n  padding: 10px;\n  font-size: 28px;\n  font-family: 'Jura', sans-serif;\n  color: #fff;\n  text-align: center;\n`;\n\nconst makeSlug = string => slugify(string, { lower: true });\n\nexport default function MoviesList({ movies }) {\n  const location = useLocation();\n  return (\n    <StyledList>\n      {movies.map(movie => (\n        <StyledArticle key={movie.id}>\n          <Link\n            to={{\n              pathname: `/movies/${makeSlug(\n                `${movie.title ? movie.title : movie.name} ${movie.id}`\n              )}`,\n            }}\n            state={{ from: { location } }}\n            style={{ display: 'flex', flexDirection: 'column' }}\n          >\n            <StyledContainer>\n              <StyledPoster\n                src={\n                  movie.poster_path\n                    ? `https://image.tmdb.org/t/p/original${movie.poster_path}`\n                    : defaultPoster\n                }\n              />\n            </StyledContainer>\n\n            <StyledNameMovie>\n              {movie.title ? movie.title : movie.name}\n            </StyledNameMovie>\n          </Link>\n        </StyledArticle>\n      ))}\n    </StyledList>\n  );\n}\n\nMoviesList.propTypes = {\n  movie: PropTypes.arrayOf(shape),\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport cryFaceImage from '../../images/not-found-movie.png';\n\nconst StyledContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst StyledTitle = styled.h2`\n  margin-bottom: 15px;\n  font-size: 32px;\n  color: #ffffff;\n`;\n\nexport default function NotFoundMovies() {\n  return (\n    <StyledContainer>\n      <StyledTitle>Not found movie</StyledTitle>\n      <img src={cryFaceImage} alt=\"crying face\" width=\"200\" />\n    </StyledContainer>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst StyledSection = styled.section`\npadding 25px 0`;\n\nexport default function Section({ children }) {\n  return <StyledSection>{children}</StyledSection>;\n}\n\nSection.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import { Oval } from 'react-loader-spinner';\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst StyledContainerSpinner = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport default function Spinner() {\n  return (\n    <StyledContainerSpinner>\n      <Oval\n        ariaLabel=\"loading-indicator\"\n        height={100}\n        width={100}\n        strokeWidth={5}\n        color=\"rgb(255, 65, 65)\"\n        secondaryColor=\"#fff\"\n      />\n    </StyledContainerSpinner>\n  );\n}\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'af82d7be8f57d00f4e04fac446f5a0d5';\n\nasync function fetchHandling(url) {\n  const response = await fetch(url);\n\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not Found'));\n}\n\nexport function fetchTrendingMovies() {\n  return fetchHandling(`${BASE_URL}/trending/all/day?api_key=${API_KEY}`);\n}\n\nexport function fetchMoviesById(id) {\n  return fetchHandling(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`);\n}\n\nexport function fetchSearchMovies(name) {\n  return fetchHandling(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${name}`\n  );\n}\n\nexport function fetchMovieCredits(id) {\n  return fetchHandling(`${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`);\n}\n\nexport function fetchMovieReviews(id) {\n  return fetchHandling(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { RiSearch2Fill } from 'react-icons/ri';\n\nconst StyledForm = styled.form`\n  display: flex;\n  align-items: flex-end;\n  justify-content: center;\n  margin-bottom: 25px;\n`;\n\nconst StyledLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-right: 10px;\n  width: 300px;\n  font-family: 'Jura', sans-serif;\n  font-size: 24px;\n  color: #fff;\n`;\n\nconst StyledInput = styled.input`\n  margin-top: 5px;\n  padding: 2px 10px;\n  font-family: 'Jura', sans-serif;\n  border: none;\n  border-radius: 10px;\n  font-size: 16px;\n  height: 25px;\n`;\n\nconst StyledButton = styled.button`\n  display: flex;\n  padding: 0;\n  height: 25px;\n  border: none;\n  cursor: pointer;\n  background-color: transparent;\n  transition: transform 250ms linear;\n\n  &:hover {\n    transform: scale(1.3);\n  }\n`;\n\nexport default function InputMovies({ value, onChange, onSubmit }) {\n  return (\n    <StyledForm onSubmit={onSubmit}>\n      <StyledLabel>\n        <span>Enter movie name</span>\n        <StyledInput type=\"text\" value={value} onChange={onChange} />\n      </StyledLabel>\n      <StyledButton type=\"submit\">\n        <RiSearch2Fill size=\"100%\" color=\"#fff\" />\n      </StyledButton>\n    </StyledForm>\n  );\n}\n\nInputMovies.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react/';\nimport { toast } from 'react-toastify';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nimport { fetchSearchMovies } from 'services/movie-api';\nimport MoviesList from 'components/MoviesList';\nimport Container from 'components/Container';\nimport NotFoundMovies from 'components/NotFoundMovies';\nimport InputMovies from 'components/InputMovies';\nimport Section from 'components/Section';\nimport Spinner from 'components/Spinner';\n\nexport default function MoviesPage() {\n  const [nameSearch, setNameSearch] = useState('');\n  const [movies, setMovies] = useState(null);\n  const [status, setStatus] = useState('idle');\n\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const searchParam = new URLSearchParams(location.search).get('query');\n\n  useEffect(() => {\n    if (searchParam) {\n      setStatus('pending');\n      return fetchSearchMovies(searchParam.toLowerCase())\n        .then(res => {\n          if (res.results.length < 1) {\n            return Promise.reject(new Error('Not Found'));\n          }\n          setMovies(res);\n          setStatus('resolved');\n        })\n        .catch(error => {\n          setStatus('rejected');\n        });\n    }\n  }, [searchParam]);\n\n  function onSubmitForm(e) {\n    e.preventDefault();\n    if (nameSearch.trim() === '') {\n      toast.info('Please input text');\n      return;\n    }\n    navigate({ ...location, search: `query=${nameSearch}` });\n    setStatus('pending');\n    fetchSearchMovies(nameSearch.toLowerCase())\n      .then(res => {\n        if (res.results.length < 1) {\n          return Promise.reject(new Error('Not Found'));\n        }\n        setMovies(res);\n        setStatus('resolved');\n      })\n      .catch(error => {\n        setStatus('rejected');\n        toast.error('Please enter another text');\n      });\n\n    setNameSearch('');\n  }\n\n  function handleNameChange(e) {\n    setNameSearch(e.target.value);\n  }\n\n  return (\n    <Section>\n      <Container>\n        <InputMovies\n          onSubmit={onSubmitForm}\n          onChange={handleNameChange}\n          value={nameSearch}\n        />\n        {status === 'pending' && <Spinner />}\n        {movies && status === 'resolved' && (\n          <MoviesList movies={movies.results} />\n        )}\n\n        {status === 'rejected' && <NotFoundMovies />}\n      </Container>\n    </Section>\n  );\n}\n"],"names":["StyledContainer","styled","StyledPoster","StyledList","StyledArticle","StyledNameMovie","MoviesList","movies","location","useLocation","map","movie","to","pathname","string","title","name","id","slugify","lower","state","from","style","display","flexDirection","src","poster_path","defaultPoster","StyledTitle","NotFoundMovies","cryFaceImage","alt","width","StyledSection","Section","children","StyledContainerSpinner","Spinner","ariaLabel","height","strokeWidth","color","secondaryColor","BASE_URL","API_KEY","fetchHandling","url","fetch","response","ok","json","Promise","reject","Error","fetchTrendingMovies","fetchMoviesById","fetchSearchMovies","fetchMovieCredits","fetchMovieReviews","StyledForm","StyledLabel","StyledInput","StyledButton","InputMovies","value","onChange","onSubmit","type","size","MoviesPage","useState","nameSearch","setNameSearch","setMovies","status","setStatus","navigate","useNavigate","searchParam","URLSearchParams","search","get","useEffect","toLowerCase","then","res","results","length","catch","error","Container","e","preventDefault","trim","toast","target"],"sourceRoot":""}