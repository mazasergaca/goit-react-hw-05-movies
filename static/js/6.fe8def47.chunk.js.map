{"version":3,"file":"static/js/6.fe8def47.chunk.js","mappings":"oRAOMA,EAAsBC,EAAAA,GAAAA,IAAH,4FAMnBC,EAAaD,EAAAA,GAAAA,GAAH,iGAMVE,EAAaF,EAAAA,GAAAA,GAAH,+EAMVG,EAAaH,EAAAA,GAAAA,KAAH,4CAIVI,EAAeJ,EAAAA,GAAAA,EAAH,4CAIZK,EAAeL,EAAAA,GAAAA,IAAH,sEAKZM,EAAsBN,EAAAA,GAAAA,IAAH,0FAMnBO,EAAwBP,EAAAA,GAAAA,EAAH,mFAMZ,SAASQ,IAAW,IAAD,IAChC,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,KAEQC,GAAOC,EAAAA,EAAAA,MAAPD,GAUR,OARAE,EAAAA,EAAAA,YAAU,WACRH,EAAU,YACVI,EAAAA,EAAAA,IAAkBH,GAAII,MAAK,SAAAC,GACzBR,EAAWQ,GACXN,EAAU,iBAEX,CAACC,KAGF,gCACc,YAAXF,IAAwB,SAACQ,EAAA,EAAD,KACjB,OAAPV,QAAO,IAAPA,GAAA,UAAAA,EAASW,eAAT,eAAkBC,QAAS,GAAgB,aAAXV,IAC/B,SAACb,EAAD,WACE,SAACE,EAAD,UACGS,EAAQW,QAAQE,KAAI,SAAAC,GACnB,OACE,UAACtB,EAAD,YACE,UAACI,EAAD,YACE,SAACD,EAAD,CACEoB,IACED,EAAOE,eAAeC,aACtBH,EAAOE,eAAeC,YAAYC,SAAS,QACvCJ,EAAOE,eAAeC,YAAYE,MAAM,GACxCC,EAENC,IAAKP,EAAOQ,OACZC,MAAM,SAER,SAAC9B,EAAD,UAAaqB,EAAOQ,aAEtB,SAAC5B,EAAD,UAAeoB,EAAOU,YAdPV,EAAOV,WAqBJ,KAAtB,OAAPJ,QAAO,IAAPA,GAAA,UAAAA,EAASW,eAAT,eAAkBC,SAA2B,aAAXV,IACjC,SAACL,EAAD,4D","sources":["views/Reviews/Reviews.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { fetchMovieReviews } from 'services/movie-api';\nimport { useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport defaultAvatar from '../../images/default-avatar.png';\nimport Spinner from 'components/Spinner';\n\nconst StylesContainerList = styled.div`\n  border: 1px solid #fff;\n  border-radius: 6px;\n  padding: 10px;\n`;\n\nconst StyledList = styled.ul`\n  list-style: none;\n  font-family: 'Jura', sans-serif;\n  color: #fff;\n`;\n\nconst StyledItem = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 25px;\n  }\n`;\n\nconst StyledName = styled.span`\n  font-size: 26px;\n`;\n\nconst StyledReview = styled.p`\n  font-size: 18px;\n`;\n\nconst StyledAvatar = styled.img`\n  border-radius: 50%;\n  margin-right: 15px;\n`;\n\nconst StyledContainerInfo = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 15px;\n`;\n\nconst StyledNotFoundReviews = styled.p`\n  font-size: 32px;\n  color: #fff;\n  text-align: center;\n`;\n\nexport default function Reviews() {\n  const [reviews, setReviews] = useState([]);\n  const [status, setStatus] = useState('idle');\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    setStatus('pending');\n    fetchMovieReviews(id).then(res => {\n      setReviews(res);\n      setStatus('resolved');\n    });\n  }, [id]);\n\n  return (\n    <>\n      {status === 'pending' && <Spinner />}\n      {reviews?.results?.length > 0 && status === 'resolved' && (\n        <StylesContainerList>\n          <StyledList>\n            {reviews.results.map(review => {\n              return (\n                <StyledItem key={review.id}>\n                  <StyledContainerInfo>\n                    <StyledAvatar\n                      src={\n                        review.author_details.avatar_path &&\n                        review.author_details.avatar_path.includes('http')\n                          ? review.author_details.avatar_path.slice(1)\n                          : defaultAvatar\n                      }\n                      alt={review.author}\n                      width=\"100\"\n                    />\n                    <StyledName>{review.author}</StyledName>\n                  </StyledContainerInfo>\n                  <StyledReview>{review.content}</StyledReview>\n                </StyledItem>\n              );\n            })}\n          </StyledList>\n        </StylesContainerList>\n      )}\n      {reviews?.results?.length === 0 && status === 'resolved' && (\n        <StyledNotFoundReviews>\n          We don't have any reviews for this movie\n        </StyledNotFoundReviews>\n      )}\n    </>\n  );\n}\n"],"names":["StylesContainerList","styled","StyledList","StyledItem","StyledName","StyledReview","StyledAvatar","StyledContainerInfo","StyledNotFoundReviews","Reviews","useState","reviews","setReviews","status","setStatus","id","useParams","useEffect","fetchMovieReviews","then","res","Spinner","results","length","map","review","src","author_details","avatar_path","includes","slice","defaultAvatar","alt","author","width","content"],"sourceRoot":""}