{"version":3,"file":"static/js/696.6ba551e2.chunk.js","mappings":"oRAOMA,EAAsBC,EAAAA,GAAAA,IAAH,4FAMnBC,EAAaD,EAAAA,GAAAA,GAAH,0JAUVE,EAAgBF,EAAAA,GAAAA,GAAH,6FAMbG,EAAkBH,EAAAA,GAAAA,IAAH,sFAMfI,EAAqBJ,EAAAA,GAAAA,KAAH,mEAKlBK,EAAkBL,EAAAA,GAAAA,KAAH,oEAKN,SAASM,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,KAEQC,GAAOC,EAAAA,EAAAA,MAAPD,GAUR,OARAE,EAAAA,EAAAA,YAAU,WACRH,EAAU,YACVI,EAAAA,EAAAA,IAAkBH,GAAII,MAAK,SAAAC,GACzBR,EAAUQ,GACVN,EAAU,iBAEX,CAACC,KAGF,gCACc,YAAXF,IAAwB,SAACQ,EAAA,EAAD,IACxBV,GAAqB,aAAXE,IACT,SAACX,EAAD,WACE,SAACE,EAAD,UACGO,EAAOW,KAAKC,KAAI,SAAAC,GACf,OACE,UAACnB,EAAD,YACE,gBACEoB,IACED,EAAME,aAAN,6CAC0CF,EAAME,cAC5CC,EAENC,IAAKJ,EAAMK,KACXC,OAAO,MACPC,MAAM,WAER,UAACzB,EAAD,YACE,SAACC,EAAD,0BACA,SAACC,EAAD,UAAkBgB,EAAMK,QACxB,SAACtB,EAAD,0BACA,SAACC,EAAD,UAAkBgB,EAAMQ,iBAfRR,EAAMT,gB","sources":["views/Cast/Cast.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport defaultAvatar from '../../images/default-avatar.png';\nimport { fetchMovieCredits } from 'services/movie-api';\nimport styled from 'styled-components';\nimport Spinner from 'components/Spinner';\n\nconst StylesContainerList = styled.div`\n  border: 1px solid #fff;\n  border-radius: 6px;\n  padding: 10px;\n`;\n\nconst StyledList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n\n  margin: -5px;\n  color: #fff;\n  list-style: none;\n  font-family: 'Jura', sans-serif;\n`;\n\nconst StyledArticle = styled.li`\n  display: flex;\n  margin: 5px;\n  width: calc((100% - 35px) / 3);\n`;\n\nconst StyledInfoActor = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 5px;\n`;\n\nconst StyledInfoCategory = styled.span`\n  font-size: 18px;\n  margin-bottom: 5px;\n`;\n\nconst StyledInfoValue = styled.span`\n  font-size: 24px;\n  margin-bottom: 15px;\n`;\n\nexport default function Cast() {\n  const [actors, setActors] = useState(null);\n  const [status, setStatus] = useState('idle');\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    setStatus('pending');\n    fetchMovieCredits(id).then(res => {\n      setActors(res);\n      setStatus('resolved');\n    });\n  }, [id]);\n\n  return (\n    <>\n      {status === 'pending' && <Spinner />}\n      {actors && status === 'resolved' && (\n        <StylesContainerList>\n          <StyledList>\n            {actors.cast.map(actor => {\n              return (\n                <StyledArticle key={actor.id}>\n                  <img\n                    src={\n                      actor.profile_path\n                        ? `https://image.tmdb.org/t/p/original${actor.profile_path}`\n                        : defaultAvatar\n                    }\n                    alt={actor.name}\n                    height=\"225\"\n                    width=\"150px\"\n                  />\n                  <StyledInfoActor>\n                    <StyledInfoCategory>Full name:</StyledInfoCategory>\n                    <StyledInfoValue>{actor.name}</StyledInfoValue>\n                    <StyledInfoCategory>Character:</StyledInfoCategory>\n                    <StyledInfoValue>{actor.character}</StyledInfoValue>\n                  </StyledInfoActor>\n                </StyledArticle>\n              );\n            })}\n          </StyledList>\n        </StylesContainerList>\n      )}\n    </>\n  );\n}\n"],"names":["StylesContainerList","styled","StyledList","StyledArticle","StyledInfoActor","StyledInfoCategory","StyledInfoValue","Cast","useState","actors","setActors","status","setStatus","id","useParams","useEffect","fetchMovieCredits","then","res","Spinner","cast","map","actor","src","profile_path","defaultAvatar","alt","name","height","width","character"],"sourceRoot":""}